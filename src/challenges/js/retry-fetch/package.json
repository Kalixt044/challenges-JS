{
  "name": "pg-js-template",
  "version": "1.0.0",
  "source": "index.html",
  "main": "./src/index.js",
  "scripts": {
    "dev": "parcel",
    "build": "parcel build",
    "test": "jest"
  },
  "keywords": [],
  "author": "Aprendiz Digital SENA I J Gallardo Navarro",
  "license": "ISC",
  "devDependencies": {
    "@babel/core": "7.18.13",
    "@babel/preset-env": "7.18.10",
    "babel-jest": "29.0.1",
    "jest": "29.0.1",
    "parcel": "2.7.0",
    "jest-environment-jsdom": "29.0.1"
  },
  "jest": {
    "testEnvironment": "jsdom"
  },
  "description": "En algunas ocasiones nuestros usuarios pueden tener mala conexión a internet y puede que necesiten de tu ayuda para reintentar varias veces una petición, tu reto es crear una función que haga peticiónes tipo GET a una API usando `fetch`, pero con un número de intentos, es decir si le envías 3 intentos la petición debe volverse a enviar el número de intentos que hayas especificado."
}
